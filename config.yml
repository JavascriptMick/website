baseurl: "http://example.org/"

title: "LibP2P"
author: "Protocol Labs"
languageCode: "en-us"
theme: "libp2p"
pygmentsstyle: "autumn"

copyright: "LibP2P - All rights reserved."

params:
  navigation:
    - name: "Home"
      link: "/"
      target: "internal"
    - name: "Implementations"
      link: "implementations"
      target: "internal"
    - name: "Bundles"
      link: "bundles"
      target: "internal"
    - name: "Examples"
      link: "examples"
      target: "internal"
  features:
    - name: "Use several transports"
      description: Your application can use newer and more performant transports like QUIC, WebRTC while still providing TCP without having to change the way it works.
    - name: "Location independent"
      description: With libp2p, addressing is made per process which means that independently of where the process is running, you will be able to dial to it
    - name: "Runtime freedom"
      description: The libp2p interface is independent of the runtime, your app can run natively or in the browser without requiring to change how it handles the network stack
    - name: "Protocol Muxing"
      description: Reuse existing pipes to mux between protocols, reducing the delay caused by things like TCP slow start and hole punching (the same benefit present in HTTP/2).
    - name: "Work offline"
      description: libp2p is capable of discovery other peers without resourcing to centralised registries, enabling apps to work disconnected from the backbone
    - name: "Encrypted connections"
      description: Ensure that every connection that is made is using an encrypted channel by picking one of the available options.
    - name: "Upgrade without compromises"
      description: Libp2p protocol muxing enables your application to support several versions of its networked services, enabling you to have a smooth migration over time
    - name: "Work in the browser"
      description: With libp2p, you can dial out from a browser session but also dial in! Other peers in the network have the ability to route packets to the browser.
    - name: "Good for high latency scenarios"
      description: Using a packet switching routing (soon), libp2p can make your application work in networks where other transports would simply fail.
  languages:
    - name: JavaScript - Browser
      icon: "devicon-javascript"
      link: "ipfs/js-libp2p-ipfs-browser"
    - name: NodeJS
      icon: "devicon-nodejs"
      link: "ipfs/js-libp2p-ipfs-nodejs"
    - name: Go
      icon: "devicon-go"
      link: "libp2p/go-libp2p"
  talks:
    - name: "libp2p ‚ù§ devp2p"
      link: "https://www.youtube.com/watch?v=HxueJbeMVG4"
      id: HxueJbeMVG4
    - name: "libp2p call - Q4 Roadmap"
      link: "https://www.youtube.com/watch?v=zGCF-s7SKFo"
      id: zGCF-s7SKFo
